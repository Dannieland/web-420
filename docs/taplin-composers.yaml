# taplin-composers.yaml
# Danielle Taplin
# 08/26/23
# YAML file describing composer API operations


#set OpenAPI version 3.0.0
openapi: 3.0.0
info:
  #provide title and version for the API
  title: Composer API
  version: 1.0.0
paths:
  #describe findAllComposers GET operation and its responses
  /composers:
    get:
      tags:
        - Composers
      summary: returns a list of composer documents
      description: API for returning a list of documents from MongoDB atlas
      operationId: findAllComposers
      responses:
        '200':
          description: Composer documents
        '500':
          description: Server Exception
        '501':
          description: MongoDB Exception
    #describe the createComposer POST operation
    post:
      tags:
        - Composers
      summary: Creates a new composer object
      description: API for adding new composer objects
      operationId: createComposer
      #describe operation's request body, which contains two strings, firstName and lastName
      requestBody:
        description: Composer's information
        content:
          application/json:
            schema:
              type: object
              required:
                - firstName
                - lastName
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
        required: true
      #describe three responses for createComposer
      responses:
        '200':
          description: Composer added
        '500':
          description: Server Exception
        '501':
          description: MongoDB Exception

      #Describe the findComposerById GET operations and responses
  /api/composers/{id}:
    get:
      tags:
        - Composers
      summary: Retrieve a composer by ID
      operationId: findComposerById
      parameters:
        - name: id
          in: path
          description: ID of the composer to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        '500':
          description: Server Exception
        '501':
          description: MongoDB Exception
    put:
      tags:
        - Composers
      summary: Update a composer by ID
      operationId: updateComposerById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
            type: object
            properties:
              firstName:
                type: string
              lastName:
                type: string
      responses:
        '200':
          description: Composer updated successfully
        '401':
          description: Invalid composerId
        '500':
          description: Server Exception
        '501':
          description: MongoDB Exception
    delete:
      tags:
        - Composers
      summary: Delete a composer by ID
      operationId: deleteComposerById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Composer deleted successfully
        '500':
          description: Server Exception
        '501':
          description: MongoDB Exception